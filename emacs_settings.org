* Syntax & references
** References
- [[http://aaronbedra.com/emacs.d/][aaron bedra - emacs in 14 days]]
- [[http://bling.github.io/blog/2013/10/27/emacs-as-my-leader-vim-survival-guide/][leader-vim survival guide]]
- [[https://www.youtube.com/watch?v=d6iY_1aMzeg&list=PLX2044Ew-UVVv31a0-Qn3dA6Sd_-NyA1n][Youtube Emacs playlist (24 vids)]]
- [[http://ergoemacs.org/emacs/organize_your_dot_emacs.html][organizing emacs config]]

** Syntax
  #+BEGIN_SRC emacs-lisp
    ;; (if window-system ...) ;; if in a graphical environment..
  #+END_SRC

* Environment
   #+BEGIN_SRC emacs-lisp
     ;; Splash Screen
     (setq inhibit-splash-screen t
	   initial-scratch-message nil
	   initial-major-mode 'org-mode)

     (setq x-select-enable-clipboard t)
     (desktop-save-mode 1) ;; automatically save/restore sessions

     (setq make-backup-files nil) ;; disable backup files
     ;; (setq auto-save-default nil) ;; disable auto-save files

     (defalias 'yes-or-no-p 'y-or-n-p) ;; Yes and No prompt

     ;; Misc
     (setq echo-keystrokes 0.1 ;; Turn down the time to echo keystrokes
	     use-dialog-box nil ;; use the echo area instead of dialog boxes
	     visible-bell t) ;; Use a visual indicator instead of making horrible noises

     ;; Vendor directory (for manually installed packages)
     (defvar sads/vendor-dir (expand-file-name "vendor" user-emacs-directory))
     (add-to-list 'load-path sads/vendor-dir)

     (dolist (project (directory-files sads/vendor-dir t "\\w+"))
       (when (file-directory-p project)
	 (add-to-list 'load-path project)))
   #+END_SRC

** Navigation
ido + smex | helm | swiper -- 3 different ways
#+BEGIN_SRC emacs-lisp
  (setq ibuffer-expert t)
#+END_SRC
** Not used
   #+BEGIN_SRC emacs-lisp
     ;; (setenv "PATH" (concat "/usr/local/bin:/opt/local/bin:/usr/bin:/bin" (getenv "PATH")))
     ;; (setq exec-path (append exec-path '("/usr/local/bin")))
     (require 'cl)

     ;; Terminal setup (stop prompt appearing each time when starting 'ansi-term')
     ;; (defvar my-term-shell "/bin/bash")
     ;; (defadvice ansi-term (before force-bash)
     ;;   (interactive (list my-term-shell)))
     ;; (ad-activate 'ansi-term)

   #+END_SRC

* Unknown purpose..
  #+BEGIN_SRC emacs-lisp
    ;; (setq backup-directory-alist `((".*" . ,temporary-file-directory)))
    ;; (setq auto-save-file-name-transforms `((".*" ,temporary-file-directory t)))

    ;; shell-script-mode
    (add-to-list 'auto-mode-alist '("\\.zsh$" . shell-script-mode))

    ;; conf-mode
    (add-to-list 'auto-mode-alist '("\\.gitconfig$" . conf-mode))
  #+END_SRC
